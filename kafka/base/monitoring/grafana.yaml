kind: Deployment
apiVersion: apps/v1
metadata:
  name: grafana
  labels:
    app: strimzi
spec:
  replicas: 1
  selector:
    matchLabels:
      name: grafana
  template:
    metadata:
      labels:
        name: grafana
    spec:
      volumes:
        - name: grafana-data
          emptyDir: {}
        - name: grafana-logs
          emptyDir: {}
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: grafana-data
              mountPath: /var/lib/grafana
            - name: grafana-logs
              mountPath: /var/log/grafana
          terminationMessagePolicy: File
          image: 'grafana/grafana:7.4.5'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  labels:
    app: strimzi
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: grafana
      protocol: TCP
      port: 3000
      targetPort: 3000
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    name: grafana

---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  host: grafana-kafka-dev.apps.ioc.nonprod.bcloud.sfb
  to:
    kind: Service
    name: grafana
    weight: 100
  port:
    targetPort: 3000
  tls:
    termination: edge
  wildcardPolicy: None    